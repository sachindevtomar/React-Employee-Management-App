{"version":3,"sources":["assets/employee.png","containers/LoginPage/index.js","actions/EmployeeActions.js","actions/HelperActions.js","actions/types.js","components/EditEmployeeDetails/index.js","components/EmployeeTable/index.js","components/Modal/index.js","containers/EmployeePage/index.js","App.js","serviceWorker.js","reducers/AuthReducer.js","reducers/EmployeeReducer.js","reducers/HelperReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","ROOT_URL","openEditEmployeeModal","payload","dispatch","type","EditEmployeeDetails","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEdit","react_default","a","createElement","name","placeholder","value","Fragment","EmployeeTable","_this","state","_this2","className","personalDetails","firstName","middleName","lastName","gender","titile","concat","address","unitNumber","street","city","province","region","zipCode","contact","landlineNumber","mobileNumber","email","jobDetails","title","employeeNumber","location","department","salary","benefitsDetails","SSS","PhilHealth","PAGIBIG","BIR","EditEmployeeDetails_EditEmployeeDetails","onClick","setState","connect","EmployeeEditModal","context","handleShow","bind","assertThisInitialized","handleClose","closeEditEmployeeModal","showModal","employeeDetails","htmlFor","id","defaultValue","Modal","show","onHide","Header","closeButton","Title","Body","renderModalbody","Footer","Button","variant","EmployeePage","employees","employeesCanView","readEmployees","map","_ref","_id","Col","md","key","includes","filter","employee","deleteEmployee","components_EmployeeTable","Container","src","require","alt","Row","renderData","components_Modal","editEmployeeInfo","_ref2","helper","error","employeeInfo","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","status","data","stop","_x","apply","arguments","_ref4","_callee4","_context4","delete","_x4","App","containers_EmployeePage","Boolean","window","hostname","match","INITIAL_STATE","username","combineReducers","auth","length","undefined","action","objectSpread","toConsumableArray","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b767b8ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/employee.43250482.png\";","import React, { Component } from 'react';\r\n\r\nclass LoginPage extends Component {\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label>\r\n                    Username:\r\n                <input type=\"text\" name=\"username\" />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                 <input type=\"password\" name=\"password\" />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import axios from 'axios';\r\nimport {\r\n    EMPLOYEE_CREATE_SUCCESS,\r\n    EMPLOYEE_READ_SUCCESS,\r\n    EMPLOYEE_UPDATE_SUCCESS,\r\n    EMPLOYEE_DELETE_SUCCESS,\r\n    EMPLOYEE_ERROR\r\n} from './types';\r\n\r\n\r\nconst ROOT_URL = 'https://salty-retreat-89693.herokuapp.com'\r\n\r\nexport const readEmployees = () => async dispatch => {\r\n\r\n    const response = await axios.get(`${ROOT_URL}/employees`);\r\n\r\n    if (response.status === 200) {\r\n        dispatch({\r\n            type: EMPLOYEE_READ_SUCCESS,\r\n            payload: response.data\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: EMPLOYEE_ERROR,\r\n            payload: {\r\n                error: 'Failed to Retrieve Employees'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const createEmployee = (payload) => async dispatch => {\r\n\r\n    const response = await axios.post(`${ROOT_URL}/employee`, payload);\r\n\r\n    if (response.status === 200) {\r\n        dispatch({\r\n            type: EMPLOYEE_CREATE_SUCCESS,\r\n            payload: response.data\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: EMPLOYEE_ERROR,\r\n            payload: {\r\n                error: 'Failed to Create Employee'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateEmployee = (payload) => async dispatch => {\r\n\r\n    const response = await axios.put(`${ROOT_URL}/employee/${payload.id}`, payload.data);\r\n    if (response.status === 200) {\r\n        dispatch({\r\n            type: EMPLOYEE_UPDATE_SUCCESS,\r\n            payload: response.data\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: EMPLOYEE_ERROR,\r\n            payload: {\r\n                error: 'Failed to Update Employee'\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const deleteEmployee = (payload) => async dispatch => {\r\n\r\n    const response = await axios.delete(`${ROOT_URL}/employee/${payload.id}`);\r\n    if (response.status === 200) {\r\n        dispatch({\r\n            type: EMPLOYEE_DELETE_SUCCESS,\r\n            payload: payload.id\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: EMPLOYEE_ERROR,\r\n            payload: {\r\n                error: 'Failed to Delete Employee'\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n","import {\r\n    EMPLOYEE_DETAILS_EDIT_MODAL, EMPLOYEE_DETAILS_EDIT_MODAL_ClOSE\r\n} from './types';\r\n\r\nexport const openEditEmployeeModal = (payload) => dispatch => {\r\n        dispatch({\r\n            type: EMPLOYEE_DETAILS_EDIT_MODAL,\r\n            payload\r\n          })\r\n}\r\n\r\nexport const closeEditEmployeeModal = (payload) => dispatch => {\r\n        dispatch({\r\n            type: EMPLOYEE_DETAILS_EDIT_MODAL_ClOSE\r\n          })\r\n}\r\n","//Auth Actions\r\nexport const AUTH_LOGIN_SUCCESS = 'auth_login_success';\r\nexport const AUTH_LOGIN_FAILED = 'auth_login_failed';\r\nexport const AUTH_LOGOUT_SUCCESS = 'auth_logout_success';\r\nexport const AUTH_LOGOUT_FAILED = 'auth_logout_failed';\r\n\r\n\r\n//Employee Actions\r\n//Create\r\nexport const EMPLOYEE_CREATE_SUCCESS = 'employee_create_success';\r\n//Read\r\nexport const EMPLOYEE_READ_SUCCESS = 'employee_read_success';\r\n//Update\r\nexport const EMPLOYEE_UPDATE_SUCCESS = 'employee_update_success';\r\n//Delete\r\nexport const EMPLOYEE_DELETE_SUCCESS = 'employee_delete_success';\r\n//Error\r\nexport const EMPLOYEE_ERROR = 'employee_error';\r\n\r\n\r\n//Helper Actions\r\n//Open Modal for edit employee with employee details\r\nexport const EMPLOYEE_DETAILS_EDIT_MODAL = 'employee_details_edit_modal';\r\n//Close Modal for edit employee with employee details\r\nexport const EMPLOYEE_DETAILS_EDIT_MODAL_ClOSE = 'employee_details_edit_modal_close';\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nexport default class EditEmployeeDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n      if(this.props.onEdit){\r\n        return (\r\n            <form>\r\n                <label>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"First name\" />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n      }\r\n      return (<></>)\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport EditEmployeeDetails from '../EditEmployeeDetails'\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\nimport { openEditEmployeeModal } from '../../actions';\r\n\r\nclass EmployeeTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onEdit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render(){\r\n      return (\r\n          <div>\r\n              <div>\r\n                  <h3 className=\"text-white\"> PERSONAL DETAILS</h3>\r\n                  <ul>\r\n                      <li> First Name {this.props.personalDetails.firstName}</li>\r\n                      <li> Middle Name {this.props.personalDetails.middleName}</li>\r\n                      <li> Last Name {this.props.personalDetails.lastName}</li>\r\n                      <li> Gender {this.props.personalDetails.gender}</li>\r\n                      <li> Title {this.props.personalDetails.titile}</li>\r\n                      <li> Address {`${this.props.personalDetails.address.unitNumber} ${this.props.personalDetails.address.street} ${this.props.personalDetails.address.city} ${this.props.personalDetails.address.province} ${this.props.personalDetails.address.region} ${this.props.personalDetails.address.zipCode} `}</li>\r\n                  </ul>\r\n              </div>\r\n              <div>\r\n                  <h3 className=\"text-white\"> CONTACT DETAILS</h3>\r\n                  <ul>\r\n                      <li> Landline {this.props.personalDetails.contact.landlineNumber}</li>\r\n                      <li> Mobile Number {this.props.personalDetails.contact.mobileNumber}</li>\r\n                      <li> Email {this.props.personalDetails.contact.email}</li>\r\n                  </ul>\r\n              </div>\r\n              <div>\r\n                  <h3 className=\"text-white\"> JOB DETAILS</h3>\r\n                  <ul>\r\n                      <li> Title {this.props.jobDetails.title}</li>\r\n                      <li> Employee Number {this.props.jobDetails.employeeNumber}</li>\r\n                      <li> Location {this.props.jobDetails.location}</li>\r\n                      <li> Department {this.props.jobDetails.department}</li>\r\n                      <li> Salary {this.props.jobDetails.salary}</li>\r\n                  </ul>\r\n              </div>\r\n              <div>\r\n                  <h3 className=\"text-white\"> EMPLOYEE BENEFITS </h3>\r\n                  <ul>\r\n                      <li> SSS {this.props.benefitsDetails.SSS}</li>\r\n                      <li> PhilHealth{this.props.benefitsDetails.PhilHealth}</li>\r\n                      <li> PAGIBIG {this.props.benefitsDetails.PAGIBIG}</li>\r\n                      <li> BIR {this.props.benefitsDetails.BIR}</li>\r\n                  </ul>\r\n              </div>\r\n              <EditEmployeeDetails onEdit={this.state.onEdit}/>\r\n              <button onClick={() => {\r\n                  this.setState({\r\n                      // onView: false,\r\n                      onEdit: true\r\n                  });\r\n\r\n                  this.props.openEditEmployeeModal(\r\n                    {\r\n                      personalDetails: this.props.personalDetails,\r\n                      jobDetails: this.props.jobDetails,\r\n                      benefitsDetails: this.props.benefitsDetails\r\n                    });\r\n              }}> Update </button>\r\n          </div>\r\n\r\n      )\r\n    }\r\n}\r\n\r\nexport default connect(null, { openEditEmployeeModal })(EmployeeTable);\r\n","import React, { Component } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { closeEditEmployeeModal } from '../../actions';\r\n\r\nconst renderAuthButton = (employeeDetails)=>{\r\n      if(employeeDetails && employeeDetails.personalDetails){\r\n        return true;\r\n      } else{\r\n        return false;\r\n      }\r\n}\r\n\r\nclass EmployeeEditModal extends Component {\r\n  constructor(props, context) {\r\n  \t\tsuper(props, context);\r\n\r\n  \t\tthis.handleShow = this.handleShow.bind(this);\r\n  \t\tthis.handleClose = this.handleClose.bind(this);\r\n  \t}\r\n\r\n\thandleClose() {\r\n    //Set the state using reducer to close the edit employee modal\r\n\t\tthis.props.closeEditEmployeeModal();\r\n\t}\r\n\r\n\thandleShow() {\r\n\t\tthis.setState({ showModal: true });\r\n\t}\r\n\r\n  renderModalbody() {\r\n    if(this.props.employeeDetails && this.props.employeeDetails.personalDetails){\r\n\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"first-name-edit-emp\">First Name:</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"first-name-edit-emp\" defaultValue={this.props.employeeDetails.personalDetails.firstName}/>\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"last-name-edit-emp\">Last Name:</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"last-name-edit-emp\"\r\n                defaultValue={this.props.employeeDetails.personalDetails.lastName}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"role-edit-emp\">Role:</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"role-edit-emp\"\r\n                defaultValue={this.props.employeeDetails.jobDetails.title}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n\t\t\t\t<Modal show={renderAuthButton(this.props.employeeDetails)} onHide={this.handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Update Record</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>  {this.renderModalbody()} </Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\r\n\t\t\t\t\t\t\tClose\r\n            </Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={this.handleClose}>\r\n\t\t\t\t\t\t\tSave Changes\r\n            </Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStatetoProps = ({ helper }) => {\r\n//     const { editEmployeeInfo } = helper;\r\n//     return {\r\n//         editEmployeeInfo: editEmployeeInfo\r\n//     }\r\n// }\r\n\r\nexport default connect(null, { closeEditEmployeeModal })(EmployeeEditModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { readEmployees, deleteEmployee, openEditEmployeeModal } from '../../actions';\r\nimport './styles.css';\r\nimport EmployeeTable from '../../components/EmployeeTable';\r\nimport  EmployeeEditModal  from '../../components/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass EmployeePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            employeesCanView: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.readEmployees();\r\n    }\r\n\r\n\r\n    renderData() {\r\n\r\n        // console.log(\"Render Data Props Info: \", JSON.stringify(this.state.employees));\r\n        const employeeItem = this.props.employees.map(({ _id, personalDetails, jobDetails, benefitsDetails }) => {\r\n            return (\r\n              <Col md={4}>\r\n                <div key={_id} className=\"employee-card\">\r\n                    <div> {`${personalDetails.firstName} ${personalDetails.lastName}`} </div>\r\n                    <div> {jobDetails.employeeNumber} </div>\r\n                    <div> {jobDetails.title} </div>\r\n                    {/* View */}\r\n                    <button className=\"button btn-view-emp\" onClick={() => {\r\n                        if(!this.state.employeesCanView.includes(_id)){\r\n                          this.setState({\r\n                              employeesCanView: this.state.employeesCanView.concat(_id)\r\n                          })\r\n                        }\r\n                        else{\r\n                          this.setState({employeesCanView: this.state.employeesCanView.filter(function(employee) {\r\n                              return employee !== _id\r\n                          })});\r\n                        }\r\n                    }}> View </button>\r\n                    {/* Delete */}\r\n                    <button className=\"button btn-delete-emp\" onClick={() => { this.props.deleteEmployee({id:_id})\r\n                    }}> Delete </button>\r\n                    {\r\n                        this.state.employeesCanView.includes(_id) ?\r\n                        <EmployeeTable personalDetails={personalDetails} jobDetails={jobDetails} benefitsDetails={benefitsDetails}/> : null\r\n                    }\r\n                </div>\r\n              </Col>\r\n            );\r\n        });\r\n        return employeeItem;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <Container>\r\n            <div>\r\n                <div className=\"employee-art\">\r\n                    <img src={require('../../assets/employee.png')} alt=\"\"/>\r\n                </div>\r\n                <div className=\"employee-list\">\r\n                    <Row>\r\n                      {this.renderData()}\r\n                    </Row>\r\n                </div>\r\n                <EmployeeEditModal employeeDetails={this.props.editEmployeeInfo}/>\r\n            </div>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = ({ employee, helper }) => {\r\n    const { employees, error, employeeInfo } = employee;\r\n    const { editEmployeeInfo } = helper;\r\n    return {\r\n        employees, error, employeeInfo, editEmployeeInfo\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps, { readEmployees, deleteEmployee, openEditEmployeeModal })(EmployeePage);\r\n","import React, { Component } from 'react';\r\n// import { withRouter, Redirect } from 'react-router-dom';\r\n//import { connect } from 'react-redux';\r\nimport './App.css';\r\n//Pages\r\nimport LoginPage from './containers/LoginPage';\r\nimport EmployeePage from './containers/EmployeePage';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <LoginPage></LoginPage> */}\r\n        <EmployeePage></EmployeePage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    AUTH_LOGIN_SUCCESS, AUTH_LOGIN_FAILED,\r\n    AUTH_LOGOUT_SUCCESS, AUTH_LOGOUT_FAILED\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    username: '',\r\n    status: 'unauthorized',\r\n};\r\n\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case AUTH_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                email: action.payload.email,\r\n                username: action.payload.username,\r\n                status: 'authorized',\r\n            }\r\n        case AUTH_LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                username: '',\r\n                email: '',\r\n                status: 'unauthorized',\r\n                error: action.payload.error\r\n            }\r\n        case AUTH_LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username: '',\r\n                email: '',\r\n                status: 'unauthorized'\r\n            }\r\n        case AUTH_LOGOUT_FAILED:\r\n            return {\r\n                status: 'unauthorized',\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    EMPLOYEE_CREATE_SUCCESS,\r\n    EMPLOYEE_READ_SUCCESS,\r\n    EMPLOYEE_UPDATE_SUCCESS,\r\n    EMPLOYEE_DELETE_SUCCESS,\r\n    EMPLOYEE_ERROR,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    employeeInfo: {},\r\n    employees: [],\r\n    error: ''\r\n};\r\n\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case EMPLOYEE_CREATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                employees: [...state.employees, action.payload]\r\n            }\r\n        case EMPLOYEE_READ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            }\r\n\r\n        case EMPLOYEE_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                employeeInfo: action.payload,\r\n                employees: state.employees.map(employee => employee.id === action.payload.id ? action.payload : employee),\r\n            }\r\n        case EMPLOYEE_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                employees: state.employees.filter(employee => employee._id !== action.payload),\r\n            }\r\n        case EMPLOYEE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    EMPLOYEE_DETAILS_EDIT_MODAL, EMPLOYEE_DETAILS_EDIT_MODAL_ClOSE\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    editEmployeeInfo: {}\r\n};\r\n\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case EMPLOYEE_DETAILS_EDIT_MODAL:\r\n            return {\r\n                ...state,\r\n                editEmployeeInfo:  action.payload\r\n            }\r\n        case EMPLOYEE_DETAILS_EDIT_MODAL_ClOSE:\r\n            return {\r\n                ...state,\r\n                editEmployeeInfo:  {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport EmployeeReducer from './EmployeeReducer';\r\nimport HelperReducer from './HelperReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    auth: AuthReducer,\r\n    employee: EmployeeReducer,\r\n    helper: HelperReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// Root Component\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//Navigation\r\nimport { BrowserRouter } from 'react-router-dom'\r\n//Middleware\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from '../src/reducers';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider >, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}